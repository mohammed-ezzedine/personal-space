name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        id: setup-gradle
        with:
          gradle-version: 8.3

      - name: Build
        run: gradle build -x test -i

      - name: Run Tests
        run: gradle test jacocoTestReport -i

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: jacocoTestReport.csv
          path: build/reports/jacoco

      - name: Generate Coverage Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv


      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'mohammed.a.ezzedine@outlook.com'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          fi

#      - name: Commit and Push Badge
#        run: |
#          git config user.name "GitHub Actions"
#          git config user.email "mohammed.a.ezzedine@outlook.com"
#          git add README.md
#          git commit -m "Update code coverage badge"
#          git push
#        if: success()

#
#      - name: Extract Code Coverage
#        id: code-coverage
#        run: |
#          COVERAGE_XML_PATH="build/reports/jacoco/jacocoTestReport.xml"
#          CODE_COVERAGE=$(grep -A1 "Report generation" "$COVERAGE_XML_PATH" | grep -oP 'total="(.*?)"' | cut -d '"' -f 2)
#          echo "Code Coverage: $CODE_COVERAGE%"
#          echo "::set-output name=coverage::$CODE_COVERAGE"
#
#      - name: Generate Code Coverage Badge
#        id: coverage-badge
#        run: |
#          COVERAGE="$CODE_COVERAGE"
#          BADGE_URL="https://img.shields.io/badge/Code%20Coverage-$COVERAGE%25-brightgreen"
#          echo "::set-output name=badge_url::$BADGE_URL"
#        env:
#          CODE_COVERAGE: ${{ steps.code-coverage.outputs.coverage }}
#
#      - name: Update README with Code Coverage Badge
#        run: |
#          BADGE_URL="${{ steps.coverage-badge.outputs.badge_url }}"
#          sed -i "s|<!-- CODE_COVERAGE_BADGE -->|![Code Coverage Badge]($BADGE_URL)|g" README.md
#        if: success()
#
